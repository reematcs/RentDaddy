name: Backend CI

on:
  pull_request:
    paths:
      - "backend/**"
      - ".github/workflows/backend.yml"

jobs:
  build:
    runs-on: ubuntu-latest
    # environment: work-flow-tests  # Commented out - configure if needed
    defaults:
      run:
        working-directory: backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: rentdaddy_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      - name: Install dependencies
        run: go mod download

      - name: Verify server.go exists
        run: |
          ls -la
          if [ -f server.go ]; then echo "server.go exists"; else echo "server.go does not exist!" && exit 1; fi

      - name: Build server
        run: go build -v ./...

      - name: Fetch main branch
        run: git fetch origin main

      - name: Test backend
        env:
          # Database settings for tests
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: rentdaddy_test
          PG_URL: postgresql://testuser:testpass@localhost:5432/rentdaddy_test?sslmode=disable
          # SMTP settings - using defaults if not configured
          SMTP_PORT: ${{ vars.SMTP_PORT || '587' }}
          SMTP_ENDPOINT_ADDRESS: ${{ vars.SMTP_ENDPOINT_ADDRESS || 'smtp.gmail.com' }}
          SMTP_USER: ${{ secrets.SMTP_USER || 'test@example.com' }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD || 'test' }}
          SMTP_TLS_MODE: ${{ vars.SMTP_TLS_MODE || 'TLS' }}
          SMTP_TEST_EMAIL: ${{ vars.SMTP_TEST_EMAIL || 'test@example.com' }}
          SMTP_FROM: ${{ vars.SMTP_FROM || 'noreply@example.com' }}
          # Skip SMTP tests if credentials not configured
          SKIP_SMTP_TESTS: ${{ secrets.SMTP_USER == '' && 'true' || 'false' }}
        run: |
          # Run tests, skipping those that require external services
          go test -v -short ./...
